@use "../base/variables" as var;

ul.list {
  padding-left: 0;
  margin: 0;
  @for $i from 1 through 12 {
    &--grid-#{$i}-columns {
      display: grid;
      grid-template-columns: repeat(#{$i}, 1fr);
    }
  }
  //@include listGridColumn();
}
ul.list,
ol.list {
  padding-left: 0;
  list-style-position: inside;
}
.list {
  &--icon {
    list-style: none;
  }
  &--inline-flex {
    display: flex;
    // list-style-position: inside;
  }
  &--inline-flex.list--text-center {
    justify-content: center;
  }
  &--inline-flex.list--text-right {
    justify-content: flex-end;
  }
  &--inline-flex-space-between {
    display: flex;
    justify-content: space-between;
  }
  &--text-center {
    text-align: center;
  }
  &--text-right {
    text-align: right;
  }
  li {
    margin-right: 10px;
  }
}

@mixin listGridColumn() {
  @for $i from 1 through 12 {
    &--grid-#{$i}-columns {
      display: grid;
      grid-template-columns: repeat(#{$i}, 1fr);
    }
  }
}

// THEME Classes ie.  .bg-primary, .color-secondary
@for $j from 1 through length(var.$themes) {
  $theme: nth(var.$themes, $j);

  // Color classes
  .list__icon--#{$theme},
  .list__item.color-#{$theme} a {
    color: var(--#{$theme});
  }
}
// .list--grid-2-columns {
//   display: grid;
//   grid-template-columns: repeat(2, 1fr);
// }
// .list--grid-3-columns {
//   display: grid;
//   grid-template-columns: repeat(3, 1fr);
// }
// .list--grid-4-columns {
//   display: grid;
//   grid-template-columns: repeat(4, 1fr);
// }

/* LISTS */

.list--inline .list__item {
  display: inline-block;
  margin-right: 1.5rem;
}

/** LIST ITEM **/
.list .list__item {
  margin-bottom: 15px;
  line-height: 1.5;
  /* align-items: center;
  display: flex; */
}

/** LIST SVG **/
.list .list__item--primary svg {
  color: var(--color-primary);
}
.list .list__item--secondary svg {
  color: var(--color-themed);
}

.list__item svg {
  padding-right: 0.5rem;
}
