import { Options } from ".";

// type ArgType<T extends string> = {
//   [key in T]: {
//     name: string;
//     control: {
//       disable: boolean;
//     };
//     description: string;
//     table: {
//       type: {
//         summary: string;
//       };
//     };
//   };
// };







const size = {
  size: {
    name: "size",
    control: "select",
    options: Options["sizeOptions"],
    description: "Variant for size",
    table: {
      type: { summary: Options["sizeOptions"].join("|") },
    },
  },
};

const padding = {
  padding: {
    name: "padding",
    control: "select",
    options: Options["sizeOptions"],
    description: "Controls the padding",
    table: {
      type: { summary: `"string" | "object"` },
    },
  },
};

const margin = {
  margin: {
    name: "margin",
    control: "select",
    options: Options["sizeOptions"],
    description: "Controls the margin",
    table: {
      type: { summary: `"string" | "object"` },
    },
  },
};

const variant = {
  variant: {
    name: "variant",
    control: "select",
    options: Options["sizeOptions"],
    description: "Controls the variant",
    table: {
      type: { summary: Options["variantOptions"].join("|") },
    },
  },
};

const textAlign = {
  textAlign: {
    name: "textAlign",
    control: "select",
    options: Options["textAlignOptions"],
    description: `Controls text align. This prop uses \`textAlignProps\`, which accepts values from \`textAlignOptions\` (a union of predefined alignment values). For more info visit API Documentation: [textAlign](https://nrmndev-fw.ngsilvestre.com)`,
    table: {
      type: {
        summary: `[textAlignOptions]`,
      },
    },
  },
};
const textTransform = {
  textTransform: {
    name: "textTransform",
    control: "select",
    options: Options["textTransformOptions"],
    description: `Controls text transform. This prop uses \`textTransformProps\`, which accepts values from \`textTransformOptions\` (a union of predefined alignment values). For more info visit API Documentation: [textTransform](https://nrmndev-fw.ngsilvestre.com)`,
    table: {
      type: {
        summary: `textTransformOptions`,
      },
    },
  },
};

const argTypes = {
  textAlign,
  textTransform,
  color,
  children,
  variant,
  margin,
  padding,
  size,
  fontSize,
};

type ArgTypesGenerator = keyof typeof argTypes;

const argTypesGenerator = (args: ArgTypesGenerator[]) => {
  let argOptions: any = {};

  args.map((arg) => {
    argOptions = { ...argOptions, ...argTypes[arg] };
  });
  //console.log(argTypes);
  return argOptions;
};

export default argTypesGenerator;
